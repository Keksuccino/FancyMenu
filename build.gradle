
plugins {
    // Required for NeoGradle
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.7"
}

subprojects {

    apply plugin: 'java'

    java.toolchain.languageVersion = JavaLanguageVersion.of(21)
    java.withSourcesJar()
//    java.withJavadocJar()
        
    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
        manifest {
            attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : mod_version,
                'Implementation-Title'    : mod_name,
                'Implementation-Version'  : mod_version,
                'Implementation-Vendor'   : mod_authors,
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Built-On-Minecraft'      : minecraft_version
            ])
        }
    }

    sourcesJar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
    }

    repositories {
        mavenCentral()
        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
            content {
                includeGroup 'org.spongepowered'
                includeGroup 'org.spongepowered.mixin'
            }
        }
        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
        maven {
            url "https://api.modrinth.com/maven"
            content {
                includeGroup "maven.modrinth"
            }
        }
        maven {
            url 'https://jitpack.io'
            content {
                includeGroupByRegex 'com\\.github\\..*'
            }
        }
        maven {
            name = 'MCEF Releases'
            url = 'https://mcef-download.cinemamod.com/repositories/releases'
            content {
                includeGroup 'com.cinemamod'
            }
        }
        // Optional for snapshot versions
        // Keep but scope so release and snapshot repos are not queried for unrelated modules.
        maven {
            name = 'MCEF Snapshots'
            url = 'https://mcef-download.cinemamod.com/repositories/snapshots'
            content {
                includeGroup 'com.cinemamod'
            }
        }
        // Crystal Nest repository where Fancy Entity Renderer is hosted.
        exclusiveContent {
            forRepository {
                maven {
                    name = "Crystal Nest"
                    url = "https://maven.crystalnest.it"
                }
            }
            filter {
                includeGroup "it.crystalnest"
            }
        }
    }

    dependencies {
        components.all { component ->
            def id = component.id
            if (id instanceof org.gradle.api.artifacts.component.ModuleComponentIdentifier) {
                def stableGroups = [
                        'maven.modrinth',
                        'curse.maven',
                        'com.github.Keksuccino',
                        'com.github.rtyley',
                        'net.fabricmc',
                        'net.fabricmc.fabric-api',
                        'net.minecraftforge',
                        'net.neoforged',
                        'org.spongepowered',
                        'com.cinemamod'
                ]
                if (id.group in stableGroups) {
                    component.changing = false
                }
            }
        }
    }

    configurations.configureEach {
        resolutionStrategy {
            cacheChangingModulesFor 168, 'hours'
            cacheDynamicVersionsFor 168, 'hours'
        }
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.getRelease().set(21)
        it.options.compilerArgs += ['-Xlint:-deprecation', '-Xlint:-removal']
    }

    processResources {
        def expandProps = [
                "group": project.group,
                "mod_name": mod_name,
                "mod_id": mod_id,
                "mod_version": mod_version,
                "mod_description": mod_description,
                "mod_license": mod_license,
                "mod_authors": mod_authors,
                "minecraft_version": minecraft_version,
                "fabric_version": fabric_version,
                "fabric_short_version": fabric_short_version,
                "fabric_loader_version": fabric_loader_version,
                "forge_version": forge_version,
                "forge_loader_version": forge_loader_version,
                "neoforge_version": neoforge_version,
                "neoforge_loader_version": neoforge_loader_version,
                "fer_version": fer_version,
                "fer_mc_version": fer_mc_version
        ]
        filesMatching(['pack.mcmeta', 'fabric.mod.json', 'META-INF/mods.toml', 'META-INF/neoforge.mods.toml', '*.mixins.json']) {
            expand expandProps
        }
        inputs.properties(expandProps)
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata).configureEach {
        enabled = false
    }

}
